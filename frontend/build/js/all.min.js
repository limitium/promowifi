(function() {
  var App, Main,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Main = (function() {
    function Main($scope, $http) {
      this.$scope = $scope;
      this.$http = $http;
      this.remove = __bind(this.remove, this);
      this.add = __bind(this.add, this);
      $http.get('/list').success((function(_this) {
        return function(data, status, headers, config) {
          return _this.promos = data.list;
        };
      })(this));
      $scope.newPromo = {};
    }

    Main.prototype.add = function() {
      this.$http.post('/add', this.$scope.newPromo).success((function(_this) {
        return function(data, status, headers, config) {
          return _this.$scope.newPromo.id = data;
        };
      })(this));
      this.promos.push(this.$scope.newPromo);
      return this.$scope.newPromo = {};
    };

    Main.prototype.remove = function(id) {
      return this.$http.post('/remove', {
        id: id
      }).success((function(_this) {
        return function(data, status, headers, config) {
          return _this.promos = _this.promos.filter(function(p) {
            return p.id !== id;
          });
        };
      })(this));
    };

    return Main;

  })();

  App = (function() {
    function App() {
      return [];
    }

    return App;

  })();

  angular.module('app', App()).controller('mainController', ['$scope', '$http', Main]);

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvZmZlZS9hcHAuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUEsTUFBQSxTQUFBO0lBQUEsa0ZBQUE7O0FBQUEsRUFBTTtBQUNTLElBQUEsY0FBRSxNQUFGLEVBQVcsS0FBWCxHQUFBO0FBQ1gsTUFEWSxJQUFDLENBQUEsU0FBQSxNQUNiLENBQUE7QUFBQSxNQURxQixJQUFDLENBQUEsUUFBQSxLQUN0QixDQUFBO0FBQUEsNkNBQUEsQ0FBQTtBQUFBLHVDQUFBLENBQUE7QUFBQSxNQUFBLEtBQUssQ0FBQyxHQUFOLENBQVUsT0FBVixDQUNFLENBQUMsT0FESCxDQUNXLENBQUEsU0FBQSxLQUFBLEdBQUE7ZUFBQSxTQUFDLElBQUQsRUFBTyxNQUFQLEVBQWUsT0FBZixFQUF3QixNQUF4QixHQUFBO2lCQUNQLEtBQUMsQ0FBQSxNQUFELEdBQVUsSUFBSSxDQUFDLEtBRFI7UUFBQSxFQUFBO01BQUEsQ0FBQSxDQUFBLENBQUEsSUFBQSxDQURYLENBQUEsQ0FBQTtBQUFBLE1BSUEsTUFBTSxDQUFDLFFBQVAsR0FBa0IsRUFKbEIsQ0FEVztJQUFBLENBQWI7O0FBQUEsbUJBTUEsR0FBQSxHQUFLLFNBQUEsR0FBQTtBQUNILE1BQUEsSUFBQyxDQUFBLEtBQUssQ0FBQyxJQUFQLENBQVksTUFBWixFQUFtQixJQUFDLENBQUEsTUFBTSxDQUFDLFFBQTNCLENBQ0UsQ0FBQyxPQURILENBQ1csQ0FBQSxTQUFBLEtBQUEsR0FBQTtlQUFBLFNBQUMsSUFBRCxFQUFPLE1BQVAsRUFBZSxPQUFmLEVBQXdCLE1BQXhCLEdBQUE7aUJBQ1AsS0FBQyxDQUFBLE1BQU0sQ0FBQyxRQUFRLENBQUMsRUFBakIsR0FBb0IsS0FEYjtRQUFBLEVBQUE7TUFBQSxDQUFBLENBQUEsQ0FBQSxJQUFBLENBRFgsQ0FBQSxDQUFBO0FBQUEsTUFJQSxJQUFDLENBQUEsTUFBTSxDQUFDLElBQVIsQ0FBYSxJQUFDLENBQUEsTUFBTSxDQUFDLFFBQXJCLENBSkEsQ0FBQTthQUtBLElBQUMsQ0FBQSxNQUFNLENBQUMsUUFBUixHQUFtQixHQU5oQjtJQUFBLENBTkwsQ0FBQTs7QUFBQSxtQkFhQSxNQUFBLEdBQVEsU0FBQyxFQUFELEdBQUE7YUFDTixJQUFDLENBQUEsS0FBSyxDQUFDLElBQVAsQ0FBWSxTQUFaLEVBQXNCO0FBQUEsUUFBQyxFQUFBLEVBQUcsRUFBSjtPQUF0QixDQUNFLENBQUMsT0FESCxDQUNXLENBQUEsU0FBQSxLQUFBLEdBQUE7ZUFBQSxTQUFDLElBQUQsRUFBTyxNQUFQLEVBQWUsT0FBZixFQUF3QixNQUF4QixHQUFBO2lCQUNQLEtBQUMsQ0FBQSxNQUFELEdBQVUsS0FBQyxDQUFBLE1BQU0sQ0FBQyxNQUFSLENBQWUsU0FBQyxDQUFELEdBQUE7bUJBQU8sQ0FBQyxDQUFDLEVBQUYsS0FBUSxHQUFmO1VBQUEsQ0FBZixFQURIO1FBQUEsRUFBQTtNQUFBLENBQUEsQ0FBQSxDQUFBLElBQUEsQ0FEWCxFQURNO0lBQUEsQ0FiUixDQUFBOztnQkFBQTs7TUFERixDQUFBOztBQUFBLEVBcUJNO0FBQ1MsSUFBQSxhQUFBLEdBQUE7QUFDWCxhQUFPLEVBQVAsQ0FEVztJQUFBLENBQWI7O2VBQUE7O01BdEJGLENBQUE7O0FBQUEsRUE0QkEsT0FBTyxDQUFDLE1BQVIsQ0FBZSxLQUFmLEVBQXNCLEdBQUEsQ0FBQSxDQUF0QixDQUNBLENBQUMsVUFERCxDQUNZLGdCQURaLEVBQzhCLENBQUMsUUFBRCxFQUFXLE9BQVgsRUFBb0IsSUFBcEIsQ0FEOUIsQ0E1QkEsQ0FBQTtBQUFBIiwiZmlsZSI6ImFsbC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBNYWluXG4gIGNvbnN0cnVjdG9yOiAoQCRzY29wZSwgQCRodHRwKSAtPlxuICAgICRodHRwLmdldCgnL2xpc3QnKVxuICAgICAgLnN1Y2Nlc3MoKGRhdGEsIHN0YXR1cywgaGVhZGVycywgY29uZmlnKSA9PlxuICAgICAgICBAcHJvbW9zID0gZGF0YS5saXN0O1xuICAgICAgKVxuICAgICRzY29wZS5uZXdQcm9tbyA9IHt9XG4gIGFkZDogPT5cbiAgICBAJGh0dHAucG9zdCgnL2FkZCcsQCRzY29wZS5uZXdQcm9tbylcbiAgICAgIC5zdWNjZXNzKChkYXRhLCBzdGF0dXMsIGhlYWRlcnMsIGNvbmZpZykgPT5cbiAgICAgICAgQCRzY29wZS5uZXdQcm9tby5pZD1kYXRhXG4gICAgICApXG4gICAgQHByb21vcy5wdXNoIEAkc2NvcGUubmV3UHJvbW9cbiAgICBAJHNjb3BlLm5ld1Byb21vID0ge31cbiAgcmVtb3ZlOiAoaWQpPT5cbiAgICBAJGh0dHAucG9zdCgnL3JlbW92ZScse2lkOmlkfSlcbiAgICAgIC5zdWNjZXNzKChkYXRhLCBzdGF0dXMsIGhlYWRlcnMsIGNvbmZpZykgPT5cbiAgICAgICAgQHByb21vcyA9IEBwcm9tb3MuZmlsdGVyIChwKSAtPiBwLmlkICE9IGlkXG4gICAgICApXG5cblxuY2xhc3MgQXBwXG4gIGNvbnN0cnVjdG9yOiAtPlxuICAgIHJldHVybiBbXVxuXG5cblxuXG5hbmd1bGFyLm1vZHVsZSgnYXBwJywgQXBwKCkpXG4uY29udHJvbGxlcignbWFpbkNvbnRyb2xsZXInLCBbJyRzY29wZScsICckaHR0cCcsIE1haW5dKSJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==